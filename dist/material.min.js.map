{"version":3,"sources":["mdlComponentHandler.js","rAF.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","textfield.js","tooltip.js","data-table.js","ripple.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","upgradedList","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","upgradedEv","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","this","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","value","onReset_","checkValidity","checkDirty","checkFocus","input_","Boolean","validity","valid","change","label_","parseInt","isNaN","boundUpdateClassesHandler","boundFocusHandler","boundBlurHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","type","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","getFrameCount","setFrameCount","x","y","bound","currentTarget","clientX","clientY","round","undefined","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","start","transformString","scale","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n     * Date.now polyfill.\n     * @return {number} the current Date\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n     * requestAnimationFrame polyfill.\n     * @param  {!Function} callback the callback function.\n     */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                radios[i]['MaterialRadio'].updateClasses_();\n            }\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});"]}